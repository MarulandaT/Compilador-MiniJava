Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLASIMPLE
    COMMENT
    COMMENTLINEA
    COMILLADOBLE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> CLASS_DECL_LIST
Rule 2     PROGRAMA -> epsilon
Rule 3     CLASS_DECL_LIST -> CLASS_DECL
Rule 4     CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST
Rule 5     CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
Rule 6     CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER
Rule 7     CLASS_DECL -> CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
Rule 8     CLASS_DECL -> CLASS ID LLAVEIZQ LLAVEDER
Rule 9     FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL
Rule 10    FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST
Rule 11    FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL
Rule 12    FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST
Rule 13    FIELD_DECL -> TYPE ID FINALIZADOR
Rule 14    FIELD_DECL -> TYPE ID LIST_AUX_IDS ;
Rule 15    LIST_AUX_IDS -> COMA ID
Rule 16    LIST_AUX_IDS -> COMA ID LIST_AUX_IDS
Rule 17    METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK
Rule 18    METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK
Rule 19    METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK
Rule 20    METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK
Rule 21    FORMALS -> TYPE ID
Rule 22    FORMALS -> TYPE ID COMA FORMALS
Rule 23    TYPE -> INT
Rule 24    TYPE -> BOOLEAN
Rule 25    TYPE -> STRING
Rule 26    TYPE -> ID
Rule 27    TYPE -> TYPE CORCHIZQ CORCHDER
Rule 28    BLOCK -> LLAVEIZQ LLAVEDER
Rule 29    BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
Rule 30    VAR_DECL_STATEMENTS_LIST -> VAR_DECL
Rule 31    VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST
Rule 32    VAR_DECL_STATEMENTS_LIST -> STATEMENT
Rule 33    VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST
Rule 34    VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR
Rule 35    VAR_DECL -> TYPE ID FINALIZADOR
Rule 36    VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
Rule 37    VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR
Rule 38    LIST_IDS_EXPRESSIONS -> COMA ID
Rule 39    LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION
Rule 40    LIST_IDS_EXPRESSIONS -> COMA ID LIST_IDS_EXPRESSIONS
Rule 41    LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS
Rule 42    STATEMENT -> ASSIGN FINALIZADOR
Rule 43    STATEMENT -> CALL FINALIZADOR
Rule 44    STATEMENT -> RETURN EXPRESSION FINALIZADOR
Rule 45    STATEMENT -> RETURN FINALIZADOR
Rule 46    STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
Rule 47    STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
Rule 48    STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
Rule 49    STATEMENT -> BREAK FINALIZADOR
Rule 50    STATEMENT -> CONTINUE FINALIZADOR
Rule 51    STATEMENT -> BLOCK
Rule 52    ASSIGN -> LOCATION ASIGNAR EXPRESSION
Rule 53    LOCATION -> ID
Rule 54    LOCATION -> EXPRESSION ACCESO ID
Rule 55    LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER
Rule 56    CALL -> METHOD PARENTIZQ ACTUALS PARENTDER
Rule 57    CALL -> METHOD PARENTIZQ PARENTDER
Rule 58    METHOD -> ID
Rule 59    METHOD -> EXPRESSION ACCESO ID
Rule 60    ACTUALS -> EXPRESSION
Rule 61    ACTUALS -> EXPRESSION COMA ACTUALS
Rule 62    EXPRESSION -> LOCATION
Rule 63    EXPRESSION -> CALL
Rule 64    EXPRESSION -> THIS
Rule 65    EXPRESSION -> NEW ID PARENTIZQ PARENTDER
Rule 66    EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER
Rule 67    EXPRESSION -> EXPRESSION ACCESO LENGTH
Rule 68    EXPRESSION -> BINARY_EXPRESSION
Rule 69    EXPRESSION -> NEGLOGICA EXPRESSION
Rule 70    EXPRESSION -> MINUS EXPRESSION
Rule 71    EXPRESSION -> LITERAL
Rule 72    EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER
Rule 73    BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION
Rule 74    BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION
Rule 75    BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION
Rule 76    BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION
Rule 77    BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION
Rule 78    BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION
Rule 79    BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION
Rule 80    BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION
Rule 81    BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION
Rule 82    BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION
Rule 83    BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION
Rule 84    BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION
Rule 85    BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION
Rule 86    LITERAL -> NUMERO
Rule 87    LITERAL -> BIN
Rule 88    LITERAL -> NUMEROC
Rule 89    LITERAL -> CADENA
Rule 90    LITERAL -> TRUE
Rule 91    LITERAL -> FALSE
Rule 92    LITERAL -> NULL
Rule 93    epsilon -> <empty>

Terminals, with rules where they appear

;                    : 14
ACCESO               : 54 59 67
ASIGNAR              : 36 37 39 41 52
BIN                  : 87
BOOLEAN              : 24
BREAK                : 49
CADENA               : 89
CLASS                : 5 6 7 8
COMA                 : 15 16 22 38 39 40 41 61
COMILLADOBLE         : 
COMILLASIMPLE        : 
COMMENT              : 
COMMENTLINEA         : 
COMPDIFERENTE        : 85
COMPIGUAL            : 84
CONTINUE             : 50
CORCHDER             : 27 55 66
CORCHIZQ             : 27 55 66
DIVIDE               : 76
ELSE                 : 46
EXTENDS              : 5 6
FALSE                : 91
FINALIZADOR          : 13 34 35 36 37 42 43 44 45 49 50
ID                   : 5 5 6 6 7 8 13 14 15 16 17 18 19 20 21 22 26 34 35 36 37 38 39 40 41 53 54 55 58 59 65
IF                   : 46 47
INT                  : 23
LENGTH               : 67
LLAVEDER             : 5 6 7 8 28 29
LLAVEIZQ             : 5 6 7 8 28 29
MAYORIGUAL           : 83
MAYORQUE             : 82
MENORIGUAL           : 81
MENORQUE             : 80
MINUS                : 70 74
MODULO               : 77
NEGLOGICA            : 69
NEW                  : 65 66
NULL                 : 92
NUMERO               : 86
NUMEROC              : 88
OOR                  : 79
PARENTDER            : 17 18 19 20 46 47 48 56 57 65 72
PARENTIZQ            : 17 18 19 20 46 47 48 56 57 65 72
PLUS                 : 73
POR                  : 75
RETURN               : 44 45
STRING               : 25
THIS                 : 64
TRUE                 : 90
VOID                 : 19 20
WHILE                : 48
YAND                 : 78
error                : 

Nonterminals, with rules where they appear

ACTUALS              : 56 61
ASSIGN               : 42
BINARY_EXPRESSION    : 68
BLOCK                : 17 18 19 20 51
CALL                 : 43 63
CLASS_DECL           : 3 4
CLASS_DECL_LIST      : 1 4
EXPRESSION           : 36 37 39 41 44 46 47 48 52 54 55 59 60 61 66 67 69 70 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85
FIELD_DECL           : 9 10
FIELD_OR_METHOD_DECL_LIST : 5 7 10 12
FORMALS              : 18 20 22
LIST_AUX_IDS         : 14 16
LIST_IDS_EXPRESSIONS : 34 36 40 41
LITERAL              : 71
LOCATION             : 52 62
METHOD               : 56 57
METHOD_DECL          : 11 12
PROGRAMA             : 0
STATEMENT            : 32 33 46 46 47 48
TYPE                 : 13 14 17 18 21 22 27 34 35 36 37 66
VAR_DECL             : 30 31
VAR_DECL_STATEMENTS_LIST : 29 31 33
epsilon              : 2

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . CLASS_DECL_LIST
    (2) PROGRAMA -> . epsilon
    (3) CLASS_DECL_LIST -> . CLASS_DECL
    (4) CLASS_DECL_LIST -> . CLASS_DECL CLASS_DECL_LIST
    (93) epsilon -> .
    (5) CLASS_DECL -> . CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> . CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER
    (7) CLASS_DECL -> . CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (8) CLASS_DECL -> . CLASS ID LLAVEIZQ LLAVEDER

    $end            reduce using rule 93 (epsilon -> .)
    CLASS           shift and go to state 5

    PROGRAMA                       shift and go to state 1
    CLASS_DECL_LIST                shift and go to state 2
    epsilon                        shift and go to state 3
    CLASS_DECL                     shift and go to state 4

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> CLASS_DECL_LIST .

    $end            reduce using rule 1 (PROGRAMA -> CLASS_DECL_LIST .)


state 3

    (2) PROGRAMA -> epsilon .

    $end            reduce using rule 2 (PROGRAMA -> epsilon .)


state 4

    (3) CLASS_DECL_LIST -> CLASS_DECL .
    (4) CLASS_DECL_LIST -> CLASS_DECL . CLASS_DECL_LIST
    (3) CLASS_DECL_LIST -> . CLASS_DECL
    (4) CLASS_DECL_LIST -> . CLASS_DECL CLASS_DECL_LIST
    (5) CLASS_DECL -> . CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> . CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER
    (7) CLASS_DECL -> . CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (8) CLASS_DECL -> . CLASS ID LLAVEIZQ LLAVEDER

    $end            reduce using rule 3 (CLASS_DECL_LIST -> CLASS_DECL .)
    CLASS           shift and go to state 5

    CLASS_DECL                     shift and go to state 4
    CLASS_DECL_LIST                shift and go to state 6

state 5

    (5) CLASS_DECL -> CLASS . ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> CLASS . ID EXTENDS ID LLAVEIZQ LLAVEDER
    (7) CLASS_DECL -> CLASS . ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (8) CLASS_DECL -> CLASS . ID LLAVEIZQ LLAVEDER

    ID              shift and go to state 7


state 6

    (4) CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST .

    $end            reduce using rule 4 (CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST .)


state 7

    (5) CLASS_DECL -> CLASS ID . EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> CLASS ID . EXTENDS ID LLAVEIZQ LLAVEDER
    (7) CLASS_DECL -> CLASS ID . LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (8) CLASS_DECL -> CLASS ID . LLAVEIZQ LLAVEDER

    EXTENDS         shift and go to state 8
    LLAVEIZQ        shift and go to state 9


state 8

    (5) CLASS_DECL -> CLASS ID EXTENDS . ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> CLASS ID EXTENDS . ID LLAVEIZQ LLAVEDER

    ID              shift and go to state 10


state 9

    (7) CLASS_DECL -> CLASS ID LLAVEIZQ . FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (8) CLASS_DECL -> CLASS ID LLAVEIZQ . LLAVEDER
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE ID FINALIZADOR
    (14) FIELD_DECL -> . TYPE ID LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE ID PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> . TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK
    (19) METHOD_DECL -> . VOID ID PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> . VOID ID PARENTIZQ FORMALS PARENTDER BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    LLAVEDER        shift and go to state 13
    VOID            shift and go to state 17
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    FIELD_OR_METHOD_DECL_LIST      shift and go to state 12
    FIELD_DECL                     shift and go to state 14
    METHOD_DECL                    shift and go to state 15
    TYPE                           shift and go to state 16

state 10

    (5) CLASS_DECL -> CLASS ID EXTENDS ID . LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> CLASS ID EXTENDS ID . LLAVEIZQ LLAVEDER

    LLAVEIZQ        shift and go to state 21


state 11

    (26) TYPE -> ID .

    ID              reduce using rule 26 (TYPE -> ID .)
    CORCHIZQ        reduce using rule 26 (TYPE -> ID .)


state 12

    (7) CLASS_DECL -> CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST . LLAVEDER

    LLAVEDER        shift and go to state 22


state 13

    (8) CLASS_DECL -> CLASS ID LLAVEIZQ LLAVEDER .

    CLASS           reduce using rule 8 (CLASS_DECL -> CLASS ID LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 8 (CLASS_DECL -> CLASS ID LLAVEIZQ LLAVEDER .)


state 14

    (9) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL .
    (10) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL . FIELD_OR_METHOD_DECL_LIST
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE ID FINALIZADOR
    (14) FIELD_DECL -> . TYPE ID LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE ID PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> . TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK
    (19) METHOD_DECL -> . VOID ID PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> . VOID ID PARENTIZQ FORMALS PARENTDER BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    LLAVEDER        reduce using rule 9 (FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    FIELD_DECL                     shift and go to state 14
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 23
    METHOD_DECL                    shift and go to state 15
    TYPE                           shift and go to state 16

state 15

    (11) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL .
    (12) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL . FIELD_OR_METHOD_DECL_LIST
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE ID FINALIZADOR
    (14) FIELD_DECL -> . TYPE ID LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE ID PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> . TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK
    (19) METHOD_DECL -> . VOID ID PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> . VOID ID PARENTIZQ FORMALS PARENTDER BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    LLAVEDER        reduce using rule 11 (FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    METHOD_DECL                    shift and go to state 15
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 24
    FIELD_DECL                     shift and go to state 14
    TYPE                           shift and go to state 16

state 16

    (13) FIELD_DECL -> TYPE . ID FINALIZADOR
    (14) FIELD_DECL -> TYPE . ID LIST_AUX_IDS ;
    (17) METHOD_DECL -> TYPE . ID PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> TYPE . ID PARENTIZQ FORMALS PARENTDER BLOCK
    (27) TYPE -> TYPE . CORCHIZQ CORCHDER

    ID              shift and go to state 25
    CORCHIZQ        shift and go to state 26


state 17

    (19) METHOD_DECL -> VOID . ID PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> VOID . ID PARENTIZQ FORMALS PARENTDER BLOCK

    ID              shift and go to state 27


state 18

    (23) TYPE -> INT .

    ID              reduce using rule 23 (TYPE -> INT .)
    CORCHIZQ        reduce using rule 23 (TYPE -> INT .)


state 19

    (24) TYPE -> BOOLEAN .

    ID              reduce using rule 24 (TYPE -> BOOLEAN .)
    CORCHIZQ        reduce using rule 24 (TYPE -> BOOLEAN .)


state 20

    (25) TYPE -> STRING .

    ID              reduce using rule 25 (TYPE -> STRING .)
    CORCHIZQ        reduce using rule 25 (TYPE -> STRING .)


state 21

    (5) CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ . FIELD_OR_METHOD_DECL_LIST LLAVEDER
    (6) CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ . LLAVEDER
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE ID FINALIZADOR
    (14) FIELD_DECL -> . TYPE ID LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE ID PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> . TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK
    (19) METHOD_DECL -> . VOID ID PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> . VOID ID PARENTIZQ FORMALS PARENTDER BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    LLAVEDER        shift and go to state 29
    VOID            shift and go to state 17
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    FIELD_OR_METHOD_DECL_LIST      shift and go to state 28
    FIELD_DECL                     shift and go to state 14
    METHOD_DECL                    shift and go to state 15
    TYPE                           shift and go to state 16

state 22

    (7) CLASS_DECL -> CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .

    CLASS           reduce using rule 7 (CLASS_DECL -> CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .)
    $end            reduce using rule 7 (CLASS_DECL -> CLASS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .)


state 23

    (10) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST .

    LLAVEDER        reduce using rule 10 (FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST .)


state 24

    (12) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST .

    LLAVEDER        reduce using rule 12 (FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST .)


state 25

    (13) FIELD_DECL -> TYPE ID . FINALIZADOR
    (14) FIELD_DECL -> TYPE ID . LIST_AUX_IDS ;
    (17) METHOD_DECL -> TYPE ID . PARENTIZQ PARENTDER BLOCK
    (18) METHOD_DECL -> TYPE ID . PARENTIZQ FORMALS PARENTDER BLOCK
    (15) LIST_AUX_IDS -> . COMA ID
    (16) LIST_AUX_IDS -> . COMA ID LIST_AUX_IDS

    FINALIZADOR     shift and go to state 30
    PARENTIZQ       shift and go to state 32
    COMA            shift and go to state 33

    LIST_AUX_IDS                   shift and go to state 31

state 26

    (27) TYPE -> TYPE CORCHIZQ . CORCHDER

    CORCHDER        shift and go to state 34


state 27

    (19) METHOD_DECL -> VOID ID . PARENTIZQ PARENTDER BLOCK
    (20) METHOD_DECL -> VOID ID . PARENTIZQ FORMALS PARENTDER BLOCK

    PARENTIZQ       shift and go to state 35


state 28

    (5) CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST . LLAVEDER

    LLAVEDER        shift and go to state 36


state 29

    (6) CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER .

    CLASS           reduce using rule 6 (CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 6 (CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ LLAVEDER .)


state 30

    (13) FIELD_DECL -> TYPE ID FINALIZADOR .

    VOID            reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)
    INT             reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)
    BOOLEAN         reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)
    STRING          reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)
    ID              reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)
    LLAVEDER        reduce using rule 13 (FIELD_DECL -> TYPE ID FINALIZADOR .)


state 31

    (14) FIELD_DECL -> TYPE ID LIST_AUX_IDS . ;

    ;               shift and go to state 37


state 32

    (17) METHOD_DECL -> TYPE ID PARENTIZQ . PARENTDER BLOCK
    (18) METHOD_DECL -> TYPE ID PARENTIZQ . FORMALS PARENTDER BLOCK
    (21) FORMALS -> . TYPE ID
    (22) FORMALS -> . TYPE ID COMA FORMALS
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    PARENTDER       shift and go to state 39
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    TYPE                           shift and go to state 38
    FORMALS                        shift and go to state 40

state 33

    (15) LIST_AUX_IDS -> COMA . ID
    (16) LIST_AUX_IDS -> COMA . ID LIST_AUX_IDS

    ID              shift and go to state 41


state 34

    (27) TYPE -> TYPE CORCHIZQ CORCHDER .

    ID              reduce using rule 27 (TYPE -> TYPE CORCHIZQ CORCHDER .)
    CORCHIZQ        reduce using rule 27 (TYPE -> TYPE CORCHIZQ CORCHDER .)


state 35

    (19) METHOD_DECL -> VOID ID PARENTIZQ . PARENTDER BLOCK
    (20) METHOD_DECL -> VOID ID PARENTIZQ . FORMALS PARENTDER BLOCK
    (21) FORMALS -> . TYPE ID
    (22) FORMALS -> . TYPE ID COMA FORMALS
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    PARENTDER       shift and go to state 42
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    FORMALS                        shift and go to state 43
    TYPE                           shift and go to state 38

state 36

    (5) CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .

    CLASS           reduce using rule 5 (CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .)
    $end            reduce using rule 5 (CLASS_DECL -> CLASS ID EXTENDS ID LLAVEIZQ FIELD_OR_METHOD_DECL_LIST LLAVEDER .)


state 37

    (14) FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .

    VOID            reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)
    INT             reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)
    BOOLEAN         reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)
    STRING          reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)
    ID              reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)
    LLAVEDER        reduce using rule 14 (FIELD_DECL -> TYPE ID LIST_AUX_IDS ; .)


state 38

    (21) FORMALS -> TYPE . ID
    (22) FORMALS -> TYPE . ID COMA FORMALS
    (27) TYPE -> TYPE . CORCHIZQ CORCHDER

    ID              shift and go to state 44
    CORCHIZQ        shift and go to state 26


state 39

    (17) METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER . BLOCK
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER

    LLAVEIZQ        shift and go to state 46

    BLOCK                          shift and go to state 45

state 40

    (18) METHOD_DECL -> TYPE ID PARENTIZQ FORMALS . PARENTDER BLOCK

    PARENTDER       shift and go to state 47


state 41

    (15) LIST_AUX_IDS -> COMA ID .
    (16) LIST_AUX_IDS -> COMA ID . LIST_AUX_IDS
    (15) LIST_AUX_IDS -> . COMA ID
    (16) LIST_AUX_IDS -> . COMA ID LIST_AUX_IDS

    ;               reduce using rule 15 (LIST_AUX_IDS -> COMA ID .)
    COMA            shift and go to state 33

    LIST_AUX_IDS                   shift and go to state 48

state 42

    (19) METHOD_DECL -> VOID ID PARENTIZQ PARENTDER . BLOCK
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER

    LLAVEIZQ        shift and go to state 46

    BLOCK                          shift and go to state 49

state 43

    (20) METHOD_DECL -> VOID ID PARENTIZQ FORMALS . PARENTDER BLOCK

    PARENTDER       shift and go to state 50


state 44

    (21) FORMALS -> TYPE ID .
    (22) FORMALS -> TYPE ID . COMA FORMALS

    PARENTDER       reduce using rule 21 (FORMALS -> TYPE ID .)
    COMA            shift and go to state 51


state 45

    (17) METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .

    VOID            reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)
    INT             reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)
    BOOLEAN         reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)
    STRING          reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)
    ID              reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)
    LLAVEDER        reduce using rule 17 (METHOD_DECL -> TYPE ID PARENTIZQ PARENTDER BLOCK .)


state 46

    (28) BLOCK -> LLAVEIZQ . LLAVEDER
    (29) BLOCK -> LLAVEIZQ . VAR_DECL_STATEMENTS_LIST LLAVEDER
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR
    (35) VAR_DECL -> . TYPE ID FINALIZADOR
    (36) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION FINALIZADOR
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    LLAVEDER        shift and go to state 52
    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 57
    LLAVEIZQ        shift and go to state 46
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    VAR_DECL_STATEMENTS_LIST       shift and go to state 53
    VAR_DECL                       shift and go to state 54
    STATEMENT                      shift and go to state 55
    TYPE                           shift and go to state 56
    EXPRESSION                     shift and go to state 58
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 47

    (18) METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER . BLOCK
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER

    LLAVEIZQ        shift and go to state 46

    BLOCK                          shift and go to state 83

state 48

    (16) LIST_AUX_IDS -> COMA ID LIST_AUX_IDS .

    ;               reduce using rule 16 (LIST_AUX_IDS -> COMA ID LIST_AUX_IDS .)


state 49

    (19) METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .

    VOID            reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)
    INT             reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)
    BOOLEAN         reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)
    STRING          reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)
    ID              reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)
    LLAVEDER        reduce using rule 19 (METHOD_DECL -> VOID ID PARENTIZQ PARENTDER BLOCK .)


state 50

    (20) METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER . BLOCK
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER

    LLAVEIZQ        shift and go to state 46

    BLOCK                          shift and go to state 84

state 51

    (22) FORMALS -> TYPE ID COMA . FORMALS
    (21) FORMALS -> . TYPE ID
    (22) FORMALS -> . TYPE ID COMA FORMALS
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 11

    TYPE                           shift and go to state 38
    FORMALS                        shift and go to state 85

state 52

    (28) BLOCK -> LLAVEIZQ LLAVEDER .

    VOID            reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    INT             reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    BOOLEAN         reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    STRING          reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    RETURN          reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    IF              reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    WHILE           reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    BREAK           reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    CONTINUE        reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    LLAVEIZQ        reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    THIS            reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    NEW             reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    NEGLOGICA       reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    MINUS           reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    PARENTIZQ       reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    NUMERO          reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    BIN             reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    NUMEROC         reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    CADENA          reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    TRUE            reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    FALSE           reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    NULL            reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)
    ELSE            reduce using rule 28 (BLOCK -> LLAVEIZQ LLAVEDER .)


state 53

    (29) BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST . LLAVEDER

    LLAVEDER        shift and go to state 86


state 54

    (30) VAR_DECL_STATEMENTS_LIST -> VAR_DECL .
    (31) VAR_DECL_STATEMENTS_LIST -> VAR_DECL . VAR_DECL_STATEMENTS_LIST
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR
    (35) VAR_DECL -> . TYPE ID FINALIZADOR
    (36) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION FINALIZADOR
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    LLAVEDER        reduce using rule 30 (VAR_DECL_STATEMENTS_LIST -> VAR_DECL .)
    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 57
    LLAVEIZQ        shift and go to state 46
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    VAR_DECL                       shift and go to state 54
    VAR_DECL_STATEMENTS_LIST       shift and go to state 87
    STATEMENT                      shift and go to state 55
    TYPE                           shift and go to state 56
    EXPRESSION                     shift and go to state 58
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 55

    (32) VAR_DECL_STATEMENTS_LIST -> STATEMENT .
    (33) VAR_DECL_STATEMENTS_LIST -> STATEMENT . VAR_DECL_STATEMENTS_LIST
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR
    (35) VAR_DECL -> . TYPE ID FINALIZADOR
    (36) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> . TYPE ID ASIGNAR EXPRESSION FINALIZADOR
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    LLAVEDER        reduce using rule 32 (VAR_DECL_STATEMENTS_LIST -> STATEMENT .)
    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    ID              shift and go to state 57
    LLAVEIZQ        shift and go to state 46
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    STATEMENT                      shift and go to state 55
    VAR_DECL_STATEMENTS_LIST       shift and go to state 88
    VAR_DECL                       shift and go to state 54
    TYPE                           shift and go to state 56
    EXPRESSION                     shift and go to state 58
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 56

    (34) VAR_DECL -> TYPE . ID LIST_IDS_EXPRESSIONS FINALIZADOR
    (35) VAR_DECL -> TYPE . ID FINALIZADOR
    (36) VAR_DECL -> TYPE . ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> TYPE . ID ASIGNAR EXPRESSION FINALIZADOR
    (27) TYPE -> TYPE . CORCHIZQ CORCHDER

    ID              shift and go to state 89
    CORCHIZQ        shift and go to state 26


state 57

    (26) TYPE -> ID .
    (53) LOCATION -> ID .
    (55) LOCATION -> ID . CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> ID .

  ! shift/reduce conflict for CORCHIZQ resolved as shift
    ID              reduce using rule 26 (TYPE -> ID .)
    ASIGNAR         reduce using rule 53 (LOCATION -> ID .)
    ACCESO          reduce using rule 53 (LOCATION -> ID .)
    PLUS            reduce using rule 53 (LOCATION -> ID .)
    MINUS           reduce using rule 53 (LOCATION -> ID .)
    POR             reduce using rule 53 (LOCATION -> ID .)
    DIVIDE          reduce using rule 53 (LOCATION -> ID .)
    MODULO          reduce using rule 53 (LOCATION -> ID .)
    YAND            reduce using rule 53 (LOCATION -> ID .)
    OOR             reduce using rule 53 (LOCATION -> ID .)
    MENORQUE        reduce using rule 53 (LOCATION -> ID .)
    MENORIGUAL      reduce using rule 53 (LOCATION -> ID .)
    MAYORQUE        reduce using rule 53 (LOCATION -> ID .)
    MAYORIGUAL      reduce using rule 53 (LOCATION -> ID .)
    COMPIGUAL       reduce using rule 53 (LOCATION -> ID .)
    COMPDIFERENTE   reduce using rule 53 (LOCATION -> ID .)
    CORCHIZQ        shift and go to state 90
    PARENTIZQ       reduce using rule 58 (METHOD -> ID .)

  ! CORCHIZQ        [ reduce using rule 26 (TYPE -> ID .) ]


state 58

    (54) LOCATION -> EXPRESSION . ACCESO ID
    (59) METHOD -> EXPRESSION . ACCESO ID
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION

    ACCESO          shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 59

    (42) STATEMENT -> ASSIGN . FINALIZADOR

    FINALIZADOR     shift and go to state 105


state 60

    (43) STATEMENT -> CALL . FINALIZADOR
    (63) EXPRESSION -> CALL .

    FINALIZADOR     shift and go to state 106
    ACCESO          reduce using rule 63 (EXPRESSION -> CALL .)
    PLUS            reduce using rule 63 (EXPRESSION -> CALL .)
    MINUS           reduce using rule 63 (EXPRESSION -> CALL .)
    POR             reduce using rule 63 (EXPRESSION -> CALL .)
    DIVIDE          reduce using rule 63 (EXPRESSION -> CALL .)
    MODULO          reduce using rule 63 (EXPRESSION -> CALL .)
    YAND            reduce using rule 63 (EXPRESSION -> CALL .)
    OOR             reduce using rule 63 (EXPRESSION -> CALL .)
    MENORQUE        reduce using rule 63 (EXPRESSION -> CALL .)
    MENORIGUAL      reduce using rule 63 (EXPRESSION -> CALL .)
    MAYORQUE        reduce using rule 63 (EXPRESSION -> CALL .)
    MAYORIGUAL      reduce using rule 63 (EXPRESSION -> CALL .)
    COMPIGUAL       reduce using rule 63 (EXPRESSION -> CALL .)
    COMPDIFERENTE   reduce using rule 63 (EXPRESSION -> CALL .)


state 61

    (44) STATEMENT -> RETURN . EXPRESSION FINALIZADOR
    (45) STATEMENT -> RETURN . FINALIZADOR
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    FINALIZADOR     shift and go to state 108
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 107
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 62

    (46) STATEMENT -> IF . PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> IF . PARENTIZQ EXPRESSION PARENTDER STATEMENT

    PARENTIZQ       shift and go to state 112


state 63

    (72) EXPRESSION -> PARENTIZQ . EXPRESSION PARENTDER
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 113
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 64

    (48) STATEMENT -> WHILE . PARENTIZQ EXPRESSION PARENTDER STATEMENT

    PARENTIZQ       shift and go to state 114


state 65

    (49) STATEMENT -> BREAK . FINALIZADOR

    FINALIZADOR     shift and go to state 115


state 66

    (50) STATEMENT -> CONTINUE . FINALIZADOR

    FINALIZADOR     shift and go to state 116


state 67

    (51) STATEMENT -> BLOCK .

    RETURN          reduce using rule 51 (STATEMENT -> BLOCK .)
    IF              reduce using rule 51 (STATEMENT -> BLOCK .)
    WHILE           reduce using rule 51 (STATEMENT -> BLOCK .)
    BREAK           reduce using rule 51 (STATEMENT -> BLOCK .)
    CONTINUE        reduce using rule 51 (STATEMENT -> BLOCK .)
    INT             reduce using rule 51 (STATEMENT -> BLOCK .)
    BOOLEAN         reduce using rule 51 (STATEMENT -> BLOCK .)
    STRING          reduce using rule 51 (STATEMENT -> BLOCK .)
    ID              reduce using rule 51 (STATEMENT -> BLOCK .)
    LLAVEIZQ        reduce using rule 51 (STATEMENT -> BLOCK .)
    THIS            reduce using rule 51 (STATEMENT -> BLOCK .)
    NEW             reduce using rule 51 (STATEMENT -> BLOCK .)
    NEGLOGICA       reduce using rule 51 (STATEMENT -> BLOCK .)
    MINUS           reduce using rule 51 (STATEMENT -> BLOCK .)
    PARENTIZQ       reduce using rule 51 (STATEMENT -> BLOCK .)
    NUMERO          reduce using rule 51 (STATEMENT -> BLOCK .)
    BIN             reduce using rule 51 (STATEMENT -> BLOCK .)
    NUMEROC         reduce using rule 51 (STATEMENT -> BLOCK .)
    CADENA          reduce using rule 51 (STATEMENT -> BLOCK .)
    TRUE            reduce using rule 51 (STATEMENT -> BLOCK .)
    FALSE           reduce using rule 51 (STATEMENT -> BLOCK .)
    NULL            reduce using rule 51 (STATEMENT -> BLOCK .)
    LLAVEDER        reduce using rule 51 (STATEMENT -> BLOCK .)
    ELSE            reduce using rule 51 (STATEMENT -> BLOCK .)


state 68

    (52) ASSIGN -> LOCATION . ASIGNAR EXPRESSION
    (62) EXPRESSION -> LOCATION .

    ASIGNAR         shift and go to state 117
    ACCESO          reduce using rule 62 (EXPRESSION -> LOCATION .)
    PLUS            reduce using rule 62 (EXPRESSION -> LOCATION .)
    MINUS           reduce using rule 62 (EXPRESSION -> LOCATION .)
    POR             reduce using rule 62 (EXPRESSION -> LOCATION .)
    DIVIDE          reduce using rule 62 (EXPRESSION -> LOCATION .)
    MODULO          reduce using rule 62 (EXPRESSION -> LOCATION .)
    YAND            reduce using rule 62 (EXPRESSION -> LOCATION .)
    OOR             reduce using rule 62 (EXPRESSION -> LOCATION .)
    MENORQUE        reduce using rule 62 (EXPRESSION -> LOCATION .)
    MENORIGUAL      reduce using rule 62 (EXPRESSION -> LOCATION .)
    MAYORQUE        reduce using rule 62 (EXPRESSION -> LOCATION .)
    MAYORIGUAL      reduce using rule 62 (EXPRESSION -> LOCATION .)
    COMPIGUAL       reduce using rule 62 (EXPRESSION -> LOCATION .)
    COMPDIFERENTE   reduce using rule 62 (EXPRESSION -> LOCATION .)


state 69

    (56) CALL -> METHOD . PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> METHOD . PARENTIZQ PARENTDER

    PARENTIZQ       shift and go to state 118


state 70

    (64) EXPRESSION -> THIS .

    ACCESO          reduce using rule 64 (EXPRESSION -> THIS .)
    PLUS            reduce using rule 64 (EXPRESSION -> THIS .)
    MINUS           reduce using rule 64 (EXPRESSION -> THIS .)
    POR             reduce using rule 64 (EXPRESSION -> THIS .)
    DIVIDE          reduce using rule 64 (EXPRESSION -> THIS .)
    MODULO          reduce using rule 64 (EXPRESSION -> THIS .)
    YAND            reduce using rule 64 (EXPRESSION -> THIS .)
    OOR             reduce using rule 64 (EXPRESSION -> THIS .)
    MENORQUE        reduce using rule 64 (EXPRESSION -> THIS .)
    MENORIGUAL      reduce using rule 64 (EXPRESSION -> THIS .)
    MAYORQUE        reduce using rule 64 (EXPRESSION -> THIS .)
    MAYORIGUAL      reduce using rule 64 (EXPRESSION -> THIS .)
    COMPIGUAL       reduce using rule 64 (EXPRESSION -> THIS .)
    COMPDIFERENTE   reduce using rule 64 (EXPRESSION -> THIS .)
    FINALIZADOR     reduce using rule 64 (EXPRESSION -> THIS .)
    PARENTDER       reduce using rule 64 (EXPRESSION -> THIS .)
    CORCHDER        reduce using rule 64 (EXPRESSION -> THIS .)
    COMA            reduce using rule 64 (EXPRESSION -> THIS .)


state 71

    (65) EXPRESSION -> NEW . ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> NEW . TYPE CORCHIZQ EXPRESSION CORCHDER
    (23) TYPE -> . INT
    (24) TYPE -> . BOOLEAN
    (25) TYPE -> . STRING
    (26) TYPE -> . ID
    (27) TYPE -> . TYPE CORCHIZQ CORCHDER

    ID              shift and go to state 119
    INT             shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20

    TYPE                           shift and go to state 120

state 72

    (68) EXPRESSION -> BINARY_EXPRESSION .

    ACCESO          reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    PLUS            reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MINUS           reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    POR             reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    DIVIDE          reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MODULO          reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    YAND            reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    OOR             reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MENORQUE        reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MENORIGUAL      reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MAYORQUE        reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    MAYORIGUAL      reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    COMPIGUAL       reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    COMPDIFERENTE   reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    FINALIZADOR     reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    PARENTDER       reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    CORCHDER        reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    COMA            reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)


state 73

    (69) EXPRESSION -> NEGLOGICA . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 121
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 74

    (70) EXPRESSION -> MINUS . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 122
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 75

    (71) EXPRESSION -> LITERAL .

    ACCESO          reduce using rule 71 (EXPRESSION -> LITERAL .)
    PLUS            reduce using rule 71 (EXPRESSION -> LITERAL .)
    MINUS           reduce using rule 71 (EXPRESSION -> LITERAL .)
    POR             reduce using rule 71 (EXPRESSION -> LITERAL .)
    DIVIDE          reduce using rule 71 (EXPRESSION -> LITERAL .)
    MODULO          reduce using rule 71 (EXPRESSION -> LITERAL .)
    YAND            reduce using rule 71 (EXPRESSION -> LITERAL .)
    OOR             reduce using rule 71 (EXPRESSION -> LITERAL .)
    MENORQUE        reduce using rule 71 (EXPRESSION -> LITERAL .)
    MENORIGUAL      reduce using rule 71 (EXPRESSION -> LITERAL .)
    MAYORQUE        reduce using rule 71 (EXPRESSION -> LITERAL .)
    MAYORIGUAL      reduce using rule 71 (EXPRESSION -> LITERAL .)
    COMPIGUAL       reduce using rule 71 (EXPRESSION -> LITERAL .)
    COMPDIFERENTE   reduce using rule 71 (EXPRESSION -> LITERAL .)
    FINALIZADOR     reduce using rule 71 (EXPRESSION -> LITERAL .)
    PARENTDER       reduce using rule 71 (EXPRESSION -> LITERAL .)
    CORCHDER        reduce using rule 71 (EXPRESSION -> LITERAL .)
    COMA            reduce using rule 71 (EXPRESSION -> LITERAL .)


state 76

    (86) LITERAL -> NUMERO .

    ACCESO          reduce using rule 86 (LITERAL -> NUMERO .)
    PLUS            reduce using rule 86 (LITERAL -> NUMERO .)
    MINUS           reduce using rule 86 (LITERAL -> NUMERO .)
    POR             reduce using rule 86 (LITERAL -> NUMERO .)
    DIVIDE          reduce using rule 86 (LITERAL -> NUMERO .)
    MODULO          reduce using rule 86 (LITERAL -> NUMERO .)
    YAND            reduce using rule 86 (LITERAL -> NUMERO .)
    OOR             reduce using rule 86 (LITERAL -> NUMERO .)
    MENORQUE        reduce using rule 86 (LITERAL -> NUMERO .)
    MENORIGUAL      reduce using rule 86 (LITERAL -> NUMERO .)
    MAYORQUE        reduce using rule 86 (LITERAL -> NUMERO .)
    MAYORIGUAL      reduce using rule 86 (LITERAL -> NUMERO .)
    COMPIGUAL       reduce using rule 86 (LITERAL -> NUMERO .)
    COMPDIFERENTE   reduce using rule 86 (LITERAL -> NUMERO .)
    FINALIZADOR     reduce using rule 86 (LITERAL -> NUMERO .)
    PARENTDER       reduce using rule 86 (LITERAL -> NUMERO .)
    CORCHDER        reduce using rule 86 (LITERAL -> NUMERO .)
    COMA            reduce using rule 86 (LITERAL -> NUMERO .)


state 77

    (87) LITERAL -> BIN .

    ACCESO          reduce using rule 87 (LITERAL -> BIN .)
    PLUS            reduce using rule 87 (LITERAL -> BIN .)
    MINUS           reduce using rule 87 (LITERAL -> BIN .)
    POR             reduce using rule 87 (LITERAL -> BIN .)
    DIVIDE          reduce using rule 87 (LITERAL -> BIN .)
    MODULO          reduce using rule 87 (LITERAL -> BIN .)
    YAND            reduce using rule 87 (LITERAL -> BIN .)
    OOR             reduce using rule 87 (LITERAL -> BIN .)
    MENORQUE        reduce using rule 87 (LITERAL -> BIN .)
    MENORIGUAL      reduce using rule 87 (LITERAL -> BIN .)
    MAYORQUE        reduce using rule 87 (LITERAL -> BIN .)
    MAYORIGUAL      reduce using rule 87 (LITERAL -> BIN .)
    COMPIGUAL       reduce using rule 87 (LITERAL -> BIN .)
    COMPDIFERENTE   reduce using rule 87 (LITERAL -> BIN .)
    FINALIZADOR     reduce using rule 87 (LITERAL -> BIN .)
    PARENTDER       reduce using rule 87 (LITERAL -> BIN .)
    CORCHDER        reduce using rule 87 (LITERAL -> BIN .)
    COMA            reduce using rule 87 (LITERAL -> BIN .)


state 78

    (88) LITERAL -> NUMEROC .

    ACCESO          reduce using rule 88 (LITERAL -> NUMEROC .)
    PLUS            reduce using rule 88 (LITERAL -> NUMEROC .)
    MINUS           reduce using rule 88 (LITERAL -> NUMEROC .)
    POR             reduce using rule 88 (LITERAL -> NUMEROC .)
    DIVIDE          reduce using rule 88 (LITERAL -> NUMEROC .)
    MODULO          reduce using rule 88 (LITERAL -> NUMEROC .)
    YAND            reduce using rule 88 (LITERAL -> NUMEROC .)
    OOR             reduce using rule 88 (LITERAL -> NUMEROC .)
    MENORQUE        reduce using rule 88 (LITERAL -> NUMEROC .)
    MENORIGUAL      reduce using rule 88 (LITERAL -> NUMEROC .)
    MAYORQUE        reduce using rule 88 (LITERAL -> NUMEROC .)
    MAYORIGUAL      reduce using rule 88 (LITERAL -> NUMEROC .)
    COMPIGUAL       reduce using rule 88 (LITERAL -> NUMEROC .)
    COMPDIFERENTE   reduce using rule 88 (LITERAL -> NUMEROC .)
    FINALIZADOR     reduce using rule 88 (LITERAL -> NUMEROC .)
    PARENTDER       reduce using rule 88 (LITERAL -> NUMEROC .)
    CORCHDER        reduce using rule 88 (LITERAL -> NUMEROC .)
    COMA            reduce using rule 88 (LITERAL -> NUMEROC .)


state 79

    (89) LITERAL -> CADENA .

    ACCESO          reduce using rule 89 (LITERAL -> CADENA .)
    PLUS            reduce using rule 89 (LITERAL -> CADENA .)
    MINUS           reduce using rule 89 (LITERAL -> CADENA .)
    POR             reduce using rule 89 (LITERAL -> CADENA .)
    DIVIDE          reduce using rule 89 (LITERAL -> CADENA .)
    MODULO          reduce using rule 89 (LITERAL -> CADENA .)
    YAND            reduce using rule 89 (LITERAL -> CADENA .)
    OOR             reduce using rule 89 (LITERAL -> CADENA .)
    MENORQUE        reduce using rule 89 (LITERAL -> CADENA .)
    MENORIGUAL      reduce using rule 89 (LITERAL -> CADENA .)
    MAYORQUE        reduce using rule 89 (LITERAL -> CADENA .)
    MAYORIGUAL      reduce using rule 89 (LITERAL -> CADENA .)
    COMPIGUAL       reduce using rule 89 (LITERAL -> CADENA .)
    COMPDIFERENTE   reduce using rule 89 (LITERAL -> CADENA .)
    FINALIZADOR     reduce using rule 89 (LITERAL -> CADENA .)
    PARENTDER       reduce using rule 89 (LITERAL -> CADENA .)
    CORCHDER        reduce using rule 89 (LITERAL -> CADENA .)
    COMA            reduce using rule 89 (LITERAL -> CADENA .)


state 80

    (90) LITERAL -> TRUE .

    ACCESO          reduce using rule 90 (LITERAL -> TRUE .)
    PLUS            reduce using rule 90 (LITERAL -> TRUE .)
    MINUS           reduce using rule 90 (LITERAL -> TRUE .)
    POR             reduce using rule 90 (LITERAL -> TRUE .)
    DIVIDE          reduce using rule 90 (LITERAL -> TRUE .)
    MODULO          reduce using rule 90 (LITERAL -> TRUE .)
    YAND            reduce using rule 90 (LITERAL -> TRUE .)
    OOR             reduce using rule 90 (LITERAL -> TRUE .)
    MENORQUE        reduce using rule 90 (LITERAL -> TRUE .)
    MENORIGUAL      reduce using rule 90 (LITERAL -> TRUE .)
    MAYORQUE        reduce using rule 90 (LITERAL -> TRUE .)
    MAYORIGUAL      reduce using rule 90 (LITERAL -> TRUE .)
    COMPIGUAL       reduce using rule 90 (LITERAL -> TRUE .)
    COMPDIFERENTE   reduce using rule 90 (LITERAL -> TRUE .)
    FINALIZADOR     reduce using rule 90 (LITERAL -> TRUE .)
    PARENTDER       reduce using rule 90 (LITERAL -> TRUE .)
    CORCHDER        reduce using rule 90 (LITERAL -> TRUE .)
    COMA            reduce using rule 90 (LITERAL -> TRUE .)


state 81

    (91) LITERAL -> FALSE .

    ACCESO          reduce using rule 91 (LITERAL -> FALSE .)
    PLUS            reduce using rule 91 (LITERAL -> FALSE .)
    MINUS           reduce using rule 91 (LITERAL -> FALSE .)
    POR             reduce using rule 91 (LITERAL -> FALSE .)
    DIVIDE          reduce using rule 91 (LITERAL -> FALSE .)
    MODULO          reduce using rule 91 (LITERAL -> FALSE .)
    YAND            reduce using rule 91 (LITERAL -> FALSE .)
    OOR             reduce using rule 91 (LITERAL -> FALSE .)
    MENORQUE        reduce using rule 91 (LITERAL -> FALSE .)
    MENORIGUAL      reduce using rule 91 (LITERAL -> FALSE .)
    MAYORQUE        reduce using rule 91 (LITERAL -> FALSE .)
    MAYORIGUAL      reduce using rule 91 (LITERAL -> FALSE .)
    COMPIGUAL       reduce using rule 91 (LITERAL -> FALSE .)
    COMPDIFERENTE   reduce using rule 91 (LITERAL -> FALSE .)
    FINALIZADOR     reduce using rule 91 (LITERAL -> FALSE .)
    PARENTDER       reduce using rule 91 (LITERAL -> FALSE .)
    CORCHDER        reduce using rule 91 (LITERAL -> FALSE .)
    COMA            reduce using rule 91 (LITERAL -> FALSE .)


state 82

    (92) LITERAL -> NULL .

    ACCESO          reduce using rule 92 (LITERAL -> NULL .)
    PLUS            reduce using rule 92 (LITERAL -> NULL .)
    MINUS           reduce using rule 92 (LITERAL -> NULL .)
    POR             reduce using rule 92 (LITERAL -> NULL .)
    DIVIDE          reduce using rule 92 (LITERAL -> NULL .)
    MODULO          reduce using rule 92 (LITERAL -> NULL .)
    YAND            reduce using rule 92 (LITERAL -> NULL .)
    OOR             reduce using rule 92 (LITERAL -> NULL .)
    MENORQUE        reduce using rule 92 (LITERAL -> NULL .)
    MENORIGUAL      reduce using rule 92 (LITERAL -> NULL .)
    MAYORQUE        reduce using rule 92 (LITERAL -> NULL .)
    MAYORIGUAL      reduce using rule 92 (LITERAL -> NULL .)
    COMPIGUAL       reduce using rule 92 (LITERAL -> NULL .)
    COMPDIFERENTE   reduce using rule 92 (LITERAL -> NULL .)
    FINALIZADOR     reduce using rule 92 (LITERAL -> NULL .)
    PARENTDER       reduce using rule 92 (LITERAL -> NULL .)
    CORCHDER        reduce using rule 92 (LITERAL -> NULL .)
    COMA            reduce using rule 92 (LITERAL -> NULL .)


state 83

    (18) METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .

    VOID            reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    INT             reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    BOOLEAN         reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    STRING          reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    ID              reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    LLAVEDER        reduce using rule 18 (METHOD_DECL -> TYPE ID PARENTIZQ FORMALS PARENTDER BLOCK .)


state 84

    (20) METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .

    VOID            reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    INT             reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    BOOLEAN         reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    STRING          reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    ID              reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)
    LLAVEDER        reduce using rule 20 (METHOD_DECL -> VOID ID PARENTIZQ FORMALS PARENTDER BLOCK .)


state 85

    (22) FORMALS -> TYPE ID COMA FORMALS .

    PARENTDER       reduce using rule 22 (FORMALS -> TYPE ID COMA FORMALS .)


state 86

    (29) BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .

    VOID            reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    INT             reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    BOOLEAN         reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    STRING          reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    ID              reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    LLAVEDER        reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    RETURN          reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    IF              reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    WHILE           reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    BREAK           reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    CONTINUE        reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    LLAVEIZQ        reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    THIS            reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    NEW             reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    NEGLOGICA       reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    MINUS           reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    PARENTIZQ       reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    NUMERO          reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    BIN             reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    NUMEROC         reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    CADENA          reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    TRUE            reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    FALSE           reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    NULL            reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)
    ELSE            reduce using rule 29 (BLOCK -> LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER .)


state 87

    (31) VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST .

    LLAVEDER        reduce using rule 31 (VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST .)


state 88

    (33) VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST .

    LLAVEDER        reduce using rule 33 (VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST .)


state 89

    (34) VAR_DECL -> TYPE ID . LIST_IDS_EXPRESSIONS FINALIZADOR
    (35) VAR_DECL -> TYPE ID . FINALIZADOR
    (36) VAR_DECL -> TYPE ID . ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> TYPE ID . ASIGNAR EXPRESSION FINALIZADOR
    (38) LIST_IDS_EXPRESSIONS -> . COMA ID
    (39) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . COMA ID LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS

    FINALIZADOR     shift and go to state 124
    ASIGNAR         shift and go to state 125
    COMA            shift and go to state 126

    LIST_IDS_EXPRESSIONS           shift and go to state 123

state 90

    (55) LOCATION -> ID CORCHIZQ . EXPRESSION CORCHDER
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 127
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 91

    (54) LOCATION -> EXPRESSION ACCESO . ID
    (59) METHOD -> EXPRESSION ACCESO . ID
    (67) EXPRESSION -> EXPRESSION ACCESO . LENGTH

    ID              shift and go to state 128
    LENGTH          shift and go to state 129


state 92

    (73) BINARY_EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 130
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 93

    (74) BINARY_EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 131
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 94

    (75) BINARY_EXPRESSION -> EXPRESSION POR . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 132
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 95

    (76) BINARY_EXPRESSION -> EXPRESSION DIVIDE . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 133
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 96

    (77) BINARY_EXPRESSION -> EXPRESSION MODULO . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 134
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 97

    (78) BINARY_EXPRESSION -> EXPRESSION YAND . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 135
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 98

    (79) BINARY_EXPRESSION -> EXPRESSION OOR . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 136
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 99

    (80) BINARY_EXPRESSION -> EXPRESSION MENORQUE . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 137
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 100

    (81) BINARY_EXPRESSION -> EXPRESSION MENORIGUAL . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 138
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 101

    (82) BINARY_EXPRESSION -> EXPRESSION MAYORQUE . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 139
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 102

    (83) BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 140
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 103

    (84) BINARY_EXPRESSION -> EXPRESSION COMPIGUAL . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 141
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 104

    (85) BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 142
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 105

    (42) STATEMENT -> ASSIGN FINALIZADOR .

    RETURN          reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    IF              reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    WHILE           reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    BREAK           reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    CONTINUE        reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    INT             reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    BOOLEAN         reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    STRING          reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    ID              reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    LLAVEIZQ        reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    THIS            reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    NEW             reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    NEGLOGICA       reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    MINUS           reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    PARENTIZQ       reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    NUMERO          reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    BIN             reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    NUMEROC         reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    CADENA          reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    TRUE            reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    FALSE           reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    NULL            reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    LLAVEDER        reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)
    ELSE            reduce using rule 42 (STATEMENT -> ASSIGN FINALIZADOR .)


state 106

    (43) STATEMENT -> CALL FINALIZADOR .

    RETURN          reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    IF              reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    WHILE           reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    BREAK           reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    CONTINUE        reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    INT             reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    BOOLEAN         reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    STRING          reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    ID              reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    LLAVEIZQ        reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    THIS            reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    NEW             reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    NEGLOGICA       reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    MINUS           reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    PARENTIZQ       reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    NUMERO          reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    BIN             reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    NUMEROC         reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    CADENA          reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    TRUE            reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    FALSE           reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    NULL            reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    LLAVEDER        reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)
    ELSE            reduce using rule 43 (STATEMENT -> CALL FINALIZADOR .)


state 107

    (44) STATEMENT -> RETURN EXPRESSION . FINALIZADOR
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    FINALIZADOR     shift and go to state 143
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 108

    (45) STATEMENT -> RETURN FINALIZADOR .

    RETURN          reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    IF              reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    WHILE           reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    BREAK           reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    CONTINUE        reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    INT             reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    BOOLEAN         reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    STRING          reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    ID              reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    LLAVEIZQ        reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    THIS            reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    NEW             reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    NEGLOGICA       reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    MINUS           reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    PARENTIZQ       reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    NUMERO          reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    BIN             reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    NUMEROC         reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    CADENA          reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    TRUE            reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    FALSE           reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    NULL            reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    LLAVEDER        reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)
    ELSE            reduce using rule 45 (STATEMENT -> RETURN FINALIZADOR .)


state 109

    (62) EXPRESSION -> LOCATION .

    FINALIZADOR     reduce using rule 62 (EXPRESSION -> LOCATION .)
    ACCESO          reduce using rule 62 (EXPRESSION -> LOCATION .)
    PLUS            reduce using rule 62 (EXPRESSION -> LOCATION .)
    MINUS           reduce using rule 62 (EXPRESSION -> LOCATION .)
    POR             reduce using rule 62 (EXPRESSION -> LOCATION .)
    DIVIDE          reduce using rule 62 (EXPRESSION -> LOCATION .)
    MODULO          reduce using rule 62 (EXPRESSION -> LOCATION .)
    YAND            reduce using rule 62 (EXPRESSION -> LOCATION .)
    OOR             reduce using rule 62 (EXPRESSION -> LOCATION .)
    MENORQUE        reduce using rule 62 (EXPRESSION -> LOCATION .)
    MENORIGUAL      reduce using rule 62 (EXPRESSION -> LOCATION .)
    MAYORQUE        reduce using rule 62 (EXPRESSION -> LOCATION .)
    MAYORIGUAL      reduce using rule 62 (EXPRESSION -> LOCATION .)
    COMPIGUAL       reduce using rule 62 (EXPRESSION -> LOCATION .)
    COMPDIFERENTE   reduce using rule 62 (EXPRESSION -> LOCATION .)
    PARENTDER       reduce using rule 62 (EXPRESSION -> LOCATION .)
    CORCHDER        reduce using rule 62 (EXPRESSION -> LOCATION .)
    COMA            reduce using rule 62 (EXPRESSION -> LOCATION .)


state 110

    (63) EXPRESSION -> CALL .

    FINALIZADOR     reduce using rule 63 (EXPRESSION -> CALL .)
    ACCESO          reduce using rule 63 (EXPRESSION -> CALL .)
    PLUS            reduce using rule 63 (EXPRESSION -> CALL .)
    MINUS           reduce using rule 63 (EXPRESSION -> CALL .)
    POR             reduce using rule 63 (EXPRESSION -> CALL .)
    DIVIDE          reduce using rule 63 (EXPRESSION -> CALL .)
    MODULO          reduce using rule 63 (EXPRESSION -> CALL .)
    YAND            reduce using rule 63 (EXPRESSION -> CALL .)
    OOR             reduce using rule 63 (EXPRESSION -> CALL .)
    MENORQUE        reduce using rule 63 (EXPRESSION -> CALL .)
    MENORIGUAL      reduce using rule 63 (EXPRESSION -> CALL .)
    MAYORQUE        reduce using rule 63 (EXPRESSION -> CALL .)
    MAYORIGUAL      reduce using rule 63 (EXPRESSION -> CALL .)
    COMPIGUAL       reduce using rule 63 (EXPRESSION -> CALL .)
    COMPDIFERENTE   reduce using rule 63 (EXPRESSION -> CALL .)
    PARENTDER       reduce using rule 63 (EXPRESSION -> CALL .)
    CORCHDER        reduce using rule 63 (EXPRESSION -> CALL .)
    COMA            reduce using rule 63 (EXPRESSION -> CALL .)


state 111

    (53) LOCATION -> ID .
    (55) LOCATION -> ID . CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> ID .

    FINALIZADOR     reduce using rule 53 (LOCATION -> ID .)
    ACCESO          reduce using rule 53 (LOCATION -> ID .)
    PLUS            reduce using rule 53 (LOCATION -> ID .)
    MINUS           reduce using rule 53 (LOCATION -> ID .)
    POR             reduce using rule 53 (LOCATION -> ID .)
    DIVIDE          reduce using rule 53 (LOCATION -> ID .)
    MODULO          reduce using rule 53 (LOCATION -> ID .)
    YAND            reduce using rule 53 (LOCATION -> ID .)
    OOR             reduce using rule 53 (LOCATION -> ID .)
    MENORQUE        reduce using rule 53 (LOCATION -> ID .)
    MENORIGUAL      reduce using rule 53 (LOCATION -> ID .)
    MAYORQUE        reduce using rule 53 (LOCATION -> ID .)
    MAYORIGUAL      reduce using rule 53 (LOCATION -> ID .)
    COMPIGUAL       reduce using rule 53 (LOCATION -> ID .)
    COMPDIFERENTE   reduce using rule 53 (LOCATION -> ID .)
    PARENTDER       reduce using rule 53 (LOCATION -> ID .)
    CORCHDER        reduce using rule 53 (LOCATION -> ID .)
    COMA            reduce using rule 53 (LOCATION -> ID .)
    ASIGNAR         reduce using rule 53 (LOCATION -> ID .)
    CORCHIZQ        shift and go to state 90
    PARENTIZQ       reduce using rule 58 (METHOD -> ID .)


state 112

    (46) STATEMENT -> IF PARENTIZQ . EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> IF PARENTIZQ . EXPRESSION PARENTDER STATEMENT
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 145
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 113

    (72) EXPRESSION -> PARENTIZQ EXPRESSION . PARENTDER
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    PARENTDER       shift and go to state 146
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 114

    (48) STATEMENT -> WHILE PARENTIZQ . EXPRESSION PARENTDER STATEMENT
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 147
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 115

    (49) STATEMENT -> BREAK FINALIZADOR .

    RETURN          reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    IF              reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    WHILE           reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    BREAK           reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    CONTINUE        reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    INT             reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    BOOLEAN         reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    STRING          reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    ID              reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    LLAVEIZQ        reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    THIS            reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    NEW             reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    NEGLOGICA       reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    MINUS           reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    PARENTIZQ       reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    NUMERO          reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    BIN             reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    NUMEROC         reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    CADENA          reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    TRUE            reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    FALSE           reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    NULL            reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    LLAVEDER        reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)
    ELSE            reduce using rule 49 (STATEMENT -> BREAK FINALIZADOR .)


state 116

    (50) STATEMENT -> CONTINUE FINALIZADOR .

    RETURN          reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    IF              reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    WHILE           reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    BREAK           reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    CONTINUE        reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    INT             reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    BOOLEAN         reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    STRING          reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    ID              reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    LLAVEIZQ        reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    THIS            reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    NEW             reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    NEGLOGICA       reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    MINUS           reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    PARENTIZQ       reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    NUMERO          reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    BIN             reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    NUMEROC         reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    CADENA          reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    TRUE            reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    FALSE           reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    NULL            reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    LLAVEDER        reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)
    ELSE            reduce using rule 50 (STATEMENT -> CONTINUE FINALIZADOR .)


state 117

    (52) ASSIGN -> LOCATION ASIGNAR . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    LOCATION                       shift and go to state 109
    EXPRESSION                     shift and go to state 148
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 118

    (56) CALL -> METHOD PARENTIZQ . ACTUALS PARENTDER
    (57) CALL -> METHOD PARENTIZQ . PARENTDER
    (60) ACTUALS -> . EXPRESSION
    (61) ACTUALS -> . EXPRESSION COMA ACTUALS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    PARENTDER       shift and go to state 150
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    METHOD                         shift and go to state 69
    ACTUALS                        shift and go to state 149
    EXPRESSION                     shift and go to state 151
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 119

    (65) EXPRESSION -> NEW ID . PARENTIZQ PARENTDER
    (26) TYPE -> ID .

    PARENTIZQ       shift and go to state 152
    CORCHIZQ        reduce using rule 26 (TYPE -> ID .)


state 120

    (66) EXPRESSION -> NEW TYPE . CORCHIZQ EXPRESSION CORCHDER
    (27) TYPE -> TYPE . CORCHIZQ CORCHDER

    CORCHIZQ        shift and go to state 153


state 121

    (69) EXPRESSION -> NEGLOGICA EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    PLUS            reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MINUS           reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    POR             reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    DIVIDE          reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MODULO          reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    YAND            reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    OOR             reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MENORQUE        reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MENORIGUAL      reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MAYORQUE        reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    MAYORIGUAL      reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    COMPIGUAL       reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    COMPDIFERENTE   reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    FINALIZADOR     reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    PARENTDER       reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    CORCHDER        reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)
    COMA            reduce using rule 69 (EXPRESSION -> NEGLOGICA EXPRESSION .)

  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! POR             [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULO          [ shift and go to state 96 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 122

    (70) EXPRESSION -> MINUS EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    PLUS            reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MINUS           reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    POR             reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    DIVIDE          reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MODULO          reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    YAND            reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    OOR             reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MENORQUE        reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MENORIGUAL      reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MAYORQUE        reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    MAYORIGUAL      reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    COMPIGUAL       reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    COMPDIFERENTE   reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    FINALIZADOR     reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    PARENTDER       reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    CORCHDER        reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)
    COMA            reduce using rule 70 (EXPRESSION -> MINUS EXPRESSION .)

  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! POR             [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULO          [ shift and go to state 96 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 123

    (34) VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS . FINALIZADOR

    FINALIZADOR     shift and go to state 154


state 124

    (35) VAR_DECL -> TYPE ID FINALIZADOR .

    RETURN          reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    IF              reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    WHILE           reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    BREAK           reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    CONTINUE        reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    INT             reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    BOOLEAN         reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    STRING          reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    ID              reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    LLAVEIZQ        reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    THIS            reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    NEW             reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    NEGLOGICA       reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    MINUS           reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    PARENTIZQ       reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    NUMERO          reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    BIN             reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    NUMEROC         reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    CADENA          reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    TRUE            reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    FALSE           reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    NULL            reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)
    LLAVEDER        reduce using rule 35 (VAR_DECL -> TYPE ID FINALIZADOR .)


state 125

    (36) VAR_DECL -> TYPE ID ASIGNAR . EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> TYPE ID ASIGNAR . EXPRESSION FINALIZADOR
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 155
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 126

    (38) LIST_IDS_EXPRESSIONS -> COMA . ID
    (39) LIST_IDS_EXPRESSIONS -> COMA . ID ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> COMA . ID LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> COMA . ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS

    ID              shift and go to state 156


state 127

    (55) LOCATION -> ID CORCHIZQ EXPRESSION . CORCHDER
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    CORCHDER        shift and go to state 157
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 128

    (54) LOCATION -> EXPRESSION ACCESO ID .
    (59) METHOD -> EXPRESSION ACCESO ID .

    ASIGNAR         reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    ACCESO          reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    PLUS            reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MINUS           reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    POR             reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    DIVIDE          reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MODULO          reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    YAND            reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    OOR             reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MENORQUE        reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MENORIGUAL      reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MAYORQUE        reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    MAYORIGUAL      reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    COMPIGUAL       reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    COMPDIFERENTE   reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    FINALIZADOR     reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    PARENTDER       reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    CORCHDER        reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    COMA            reduce using rule 54 (LOCATION -> EXPRESSION ACCESO ID .)
    PARENTIZQ       reduce using rule 59 (METHOD -> EXPRESSION ACCESO ID .)


state 129

    (67) EXPRESSION -> EXPRESSION ACCESO LENGTH .

    ACCESO          reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    PLUS            reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MINUS           reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    POR             reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    DIVIDE          reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MODULO          reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    YAND            reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    OOR             reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MENORQUE        reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MENORIGUAL      reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MAYORQUE        reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    MAYORIGUAL      reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    COMPIGUAL       reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    COMPDIFERENTE   reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    FINALIZADOR     reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    PARENTDER       reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    CORCHDER        reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)
    COMA            reduce using rule 67 (EXPRESSION -> EXPRESSION ACCESO LENGTH .)


state 130

    (73) BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    PLUS            reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MINUS           reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    YAND            reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    OOR             reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MENORQUE        reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MENORIGUAL      reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MAYORQUE        reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MAYORIGUAL      reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    COMPIGUAL       reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    COMPDIFERENTE   reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    FINALIZADOR     reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    PARENTDER       reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    CORCHDER        reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    COMA            reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! POR             [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MODULO          [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 131

    (74) BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    PLUS            reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MINUS           reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    YAND            reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    OOR             reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MENORQUE        reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MENORIGUAL      reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MAYORQUE        reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MAYORIGUAL      reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    COMPIGUAL       reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    COMPDIFERENTE   reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    FINALIZADOR     reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    PARENTDER       reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    CORCHDER        reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    COMA            reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! POR             [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MODULO          [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 132

    (75) BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    PLUS            reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MINUS           reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    POR             reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    DIVIDE          reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MODULO          reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    YAND            reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    OOR             reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MENORQUE        reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MENORIGUAL      reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MAYORQUE        reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    MAYORIGUAL      reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    COMPIGUAL       reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    COMPDIFERENTE   reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    FINALIZADOR     reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    PARENTDER       reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    CORCHDER        reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)
    COMA            reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION POR EXPRESSION .)

  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! POR             [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULO          [ shift and go to state 96 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 133

    (76) BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    PLUS            reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MINUS           reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    POR             reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MODULO          reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    YAND            reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    OOR             reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MENORQUE        reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MENORIGUAL      reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MAYORQUE        reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MAYORIGUAL      reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    COMPIGUAL       reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    COMPDIFERENTE   reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    FINALIZADOR     reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    PARENTDER       reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    CORCHDER        reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    COMA            reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)

  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! POR             [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULO          [ shift and go to state 96 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 134

    (77) BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    PLUS            reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MINUS           reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    POR             reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    DIVIDE          reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MODULO          reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    YAND            reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    OOR             reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MENORQUE        reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MENORIGUAL      reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MAYORQUE        reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    MAYORIGUAL      reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    COMPIGUAL       reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    COMPDIFERENTE   reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    FINALIZADOR     reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    PARENTDER       reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    CORCHDER        reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)
    COMA            reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION MODULO EXPRESSION .)

  ! ACCESO          [ shift and go to state 144 ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! POR             [ shift and go to state 94 ]
  ! DIVIDE          [ shift and go to state 95 ]
  ! MODULO          [ shift and go to state 96 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 135

    (78) BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    YAND            reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    OOR             reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    FINALIZADOR     reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    PARENTDER       reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    CORCHDER        reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    COMA            reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104

  ! PLUS            [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MINUS           [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! POR             [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MODULO          [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MENORQUE        [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MENORIGUAL      [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MAYORQUE        [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! MAYORIGUAL      [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! COMPIGUAL       [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! COMPDIFERENTE   [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION YAND EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]


state 136

    (79) BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    OOR             reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    FINALIZADOR     reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    PARENTDER       reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    CORCHDER        reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    COMA            reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104

  ! PLUS            [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MINUS           [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! POR             [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MODULO          [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! YAND            [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MENORQUE        [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MENORIGUAL      [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MAYORQUE        [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! COMPIGUAL       [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! COMPDIFERENTE   [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION OOR EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! OOR             [ shift and go to state 98 ]


state 137

    (80) BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    YAND            reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    OOR             reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    MENORQUE        reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    MENORIGUAL      reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    MAYORQUE        reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    MAYORIGUAL      reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    COMPIGUAL       reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    COMPDIFERENTE   reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    FINALIZADOR     reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    PARENTDER       reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    CORCHDER        reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    COMA            reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! PLUS            [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .) ]
  ! MINUS           [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .) ]
  ! POR             [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .) ]
  ! MODULO          [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION MENORQUE EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 138

    (81) BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    YAND            reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    OOR             reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    MENORQUE        reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    MENORIGUAL      reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    MAYORQUE        reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    MAYORIGUAL      reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    COMPIGUAL       reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    COMPDIFERENTE   reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    FINALIZADOR     reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    PARENTDER       reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    CORCHDER        reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    COMA            reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! PLUS            [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .) ]
  ! MINUS           [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .) ]
  ! POR             [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .) ]
  ! MODULO          [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION MENORIGUAL EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 139

    (82) BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    YAND            reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    OOR             reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    MENORQUE        reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    MENORIGUAL      reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    MAYORQUE        reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    MAYORIGUAL      reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    COMPIGUAL       reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    COMPDIFERENTE   reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    FINALIZADOR     reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    PARENTDER       reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    CORCHDER        reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    COMA            reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! PLUS            [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .) ]
  ! MINUS           [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .) ]
  ! POR             [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .) ]
  ! MODULO          [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION MAYORQUE EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 140

    (83) BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    YAND            reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    OOR             reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    MENORQUE        reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    MENORIGUAL      reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    MAYORQUE        reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    MAYORIGUAL      reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    COMPIGUAL       reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    COMPDIFERENTE   reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    FINALIZADOR     reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    PARENTDER       reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    CORCHDER        reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    COMA            reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96

  ! PLUS            [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .) ]
  ! MINUS           [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .) ]
  ! POR             [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .) ]
  ! MODULO          [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION MAYORIGUAL EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! MENORQUE        [ shift and go to state 99 ]
  ! MENORIGUAL      [ shift and go to state 100 ]
  ! MAYORQUE        [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 141

    (84) BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    YAND            reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    OOR             reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    COMPIGUAL       reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    COMPDIFERENTE   reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    FINALIZADOR     reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    PARENTDER       reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    CORCHDER        reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    COMA            reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102

  ! PLUS            [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MINUS           [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! POR             [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MODULO          [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MENORQUE        [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MENORIGUAL      [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MAYORQUE        [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! MAYORIGUAL      [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION COMPIGUAL EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 142

    (85) BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    ACCESO          reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    YAND            reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    OOR             reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    COMPIGUAL       reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    COMPDIFERENTE   reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    FINALIZADOR     reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    PARENTDER       reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    CORCHDER        reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    COMA            reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102

  ! PLUS            [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MINUS           [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! POR             [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MODULO          [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MENORQUE        [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MENORIGUAL      [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MAYORQUE        [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION COMPDIFERENTE EXPRESSION .) ]
  ! ACCESO          [ shift and go to state 144 ]
  ! YAND            [ shift and go to state 97 ]
  ! OOR             [ shift and go to state 98 ]
  ! COMPIGUAL       [ shift and go to state 103 ]
  ! COMPDIFERENTE   [ shift and go to state 104 ]


state 143

    (44) STATEMENT -> RETURN EXPRESSION FINALIZADOR .

    RETURN          reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    IF              reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    WHILE           reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    BREAK           reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    CONTINUE        reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    INT             reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    BOOLEAN         reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    STRING          reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    ID              reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    LLAVEIZQ        reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    THIS            reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    NEW             reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    NEGLOGICA       reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    MINUS           reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    PARENTIZQ       reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    NUMERO          reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    BIN             reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    NUMEROC         reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    CADENA          reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    TRUE            reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    FALSE           reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    NULL            reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    LLAVEDER        reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)
    ELSE            reduce using rule 44 (STATEMENT -> RETURN EXPRESSION FINALIZADOR .)


state 144

    (67) EXPRESSION -> EXPRESSION ACCESO . LENGTH
    (54) LOCATION -> EXPRESSION ACCESO . ID
    (59) METHOD -> EXPRESSION ACCESO . ID

    LENGTH          shift and go to state 129
    ID              shift and go to state 128


state 145

    (46) STATEMENT -> IF PARENTIZQ EXPRESSION . PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> IF PARENTIZQ EXPRESSION . PARENTDER STATEMENT
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    PARENTDER       shift and go to state 158
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 146

    (72) EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .

    ACCESO          reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    PLUS            reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MINUS           reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    POR             reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    DIVIDE          reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MODULO          reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    YAND            reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    OOR             reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MENORQUE        reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MENORIGUAL      reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MAYORQUE        reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    MAYORIGUAL      reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    COMPIGUAL       reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    COMPDIFERENTE   reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    FINALIZADOR     reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    PARENTDER       reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    CORCHDER        reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)
    COMA            reduce using rule 72 (EXPRESSION -> PARENTIZQ EXPRESSION PARENTDER .)


state 147

    (48) STATEMENT -> WHILE PARENTIZQ EXPRESSION . PARENTDER STATEMENT
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    PARENTDER       shift and go to state 159
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 148

    (52) ASSIGN -> LOCATION ASIGNAR EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    FINALIZADOR     reduce using rule 52 (ASSIGN -> LOCATION ASIGNAR EXPRESSION .)
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 149

    (56) CALL -> METHOD PARENTIZQ ACTUALS . PARENTDER

    PARENTDER       shift and go to state 160


state 150

    (57) CALL -> METHOD PARENTIZQ PARENTDER .

    FINALIZADOR     reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    ACCESO          reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    PLUS            reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MINUS           reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    POR             reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    DIVIDE          reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MODULO          reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    YAND            reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    OOR             reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MENORQUE        reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MENORIGUAL      reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MAYORQUE        reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    MAYORIGUAL      reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    COMPIGUAL       reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    COMPDIFERENTE   reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    PARENTDER       reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    CORCHDER        reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)
    COMA            reduce using rule 57 (CALL -> METHOD PARENTIZQ PARENTDER .)


state 151

    (60) ACTUALS -> EXPRESSION .
    (61) ACTUALS -> EXPRESSION . COMA ACTUALS
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    PARENTDER       reduce using rule 60 (ACTUALS -> EXPRESSION .)
    COMA            shift and go to state 161
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 152

    (65) EXPRESSION -> NEW ID PARENTIZQ . PARENTDER

    PARENTDER       shift and go to state 162


state 153

    (66) EXPRESSION -> NEW TYPE CORCHIZQ . EXPRESSION CORCHDER
    (27) TYPE -> TYPE CORCHIZQ . CORCHDER
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    CORCHDER        shift and go to state 34
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 163
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 154

    (34) VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .

    RETURN          reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    IF              reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    WHILE           reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BREAK           reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    CONTINUE        reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    INT             reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BOOLEAN         reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    STRING          reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    ID              reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    LLAVEIZQ        reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    THIS            reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NEW             reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NEGLOGICA       reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    MINUS           reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    PARENTIZQ       reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NUMERO          reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BIN             reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NUMEROC         reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    CADENA          reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    TRUE            reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    FALSE           reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NULL            reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)
    LLAVEDER        reduce using rule 34 (VAR_DECL -> TYPE ID LIST_IDS_EXPRESSIONS FINALIZADOR .)


state 155

    (36) VAR_DECL -> TYPE ID ASIGNAR EXPRESSION . LIST_IDS_EXPRESSIONS FINALIZADOR
    (37) VAR_DECL -> TYPE ID ASIGNAR EXPRESSION . FINALIZADOR
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID
    (38) LIST_IDS_EXPRESSIONS -> . COMA ID
    (39) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . COMA ID LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS

    FINALIZADOR     shift and go to state 165
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104
    COMA            shift and go to state 126

    LIST_IDS_EXPRESSIONS           shift and go to state 164

state 156

    (38) LIST_IDS_EXPRESSIONS -> COMA ID .
    (39) LIST_IDS_EXPRESSIONS -> COMA ID . ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> COMA ID . LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> COMA ID . ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS
    (38) LIST_IDS_EXPRESSIONS -> . COMA ID
    (39) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . COMA ID LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS

    FINALIZADOR     reduce using rule 38 (LIST_IDS_EXPRESSIONS -> COMA ID .)
    ASIGNAR         shift and go to state 166
    COMA            shift and go to state 126

    LIST_IDS_EXPRESSIONS           shift and go to state 167

state 157

    (55) LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .

    ASIGNAR         reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    ACCESO          reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    PLUS            reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MINUS           reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    POR             reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    DIVIDE          reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MODULO          reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    YAND            reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    OOR             reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MENORQUE        reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MENORIGUAL      reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MAYORQUE        reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    MAYORIGUAL      reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    COMPIGUAL       reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    COMPDIFERENTE   reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    FINALIZADOR     reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    PARENTDER       reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    CORCHDER        reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)
    COMA            reduce using rule 55 (LOCATION -> ID CORCHIZQ EXPRESSION CORCHDER .)


state 158

    (46) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER . STATEMENT ELSE STATEMENT
    (47) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER . STATEMENT
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    LLAVEIZQ        shift and go to state 46
    ID              shift and go to state 111
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 58
    STATEMENT                      shift and go to state 168
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 159

    (48) STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER . STATEMENT
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    LLAVEIZQ        shift and go to state 46
    ID              shift and go to state 111
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 58
    STATEMENT                      shift and go to state 169
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 160

    (56) CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .

    FINALIZADOR     reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    ACCESO          reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    PLUS            reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MINUS           reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    POR             reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    DIVIDE          reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MODULO          reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    YAND            reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    OOR             reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MENORQUE        reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MENORIGUAL      reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MAYORQUE        reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    MAYORIGUAL      reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    COMPIGUAL       reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    COMPDIFERENTE   reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    PARENTDER       reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    CORCHDER        reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)
    COMA            reduce using rule 56 (CALL -> METHOD PARENTIZQ ACTUALS PARENTDER .)


state 161

    (61) ACTUALS -> EXPRESSION COMA . ACTUALS
    (60) ACTUALS -> . EXPRESSION
    (61) ACTUALS -> . EXPRESSION COMA ACTUALS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 151
    ACTUALS                        shift and go to state 170
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 162

    (65) EXPRESSION -> NEW ID PARENTIZQ PARENTDER .

    ACCESO          reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    PLUS            reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MINUS           reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    POR             reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    DIVIDE          reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MODULO          reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    YAND            reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    OOR             reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MENORQUE        reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MENORIGUAL      reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MAYORQUE        reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    MAYORIGUAL      reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    COMPIGUAL       reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    COMPDIFERENTE   reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    FINALIZADOR     reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    PARENTDER       reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    CORCHDER        reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)
    COMA            reduce using rule 65 (EXPRESSION -> NEW ID PARENTIZQ PARENTDER .)


state 163

    (66) EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION . CORCHDER
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID

    CORCHDER        shift and go to state 171
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104


state 164

    (36) VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS . FINALIZADOR

    FINALIZADOR     shift and go to state 172


state 165

    (37) VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .

    RETURN          reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    IF              reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    WHILE           reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    BREAK           reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    CONTINUE        reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    INT             reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    BOOLEAN         reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    STRING          reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    ID              reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    LLAVEIZQ        reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    THIS            reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    NEW             reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    NEGLOGICA       reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    MINUS           reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    PARENTIZQ       reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    NUMERO          reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    BIN             reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    NUMEROC         reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    CADENA          reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    TRUE            reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    FALSE           reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    NULL            reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)
    LLAVEDER        reduce using rule 37 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION FINALIZADOR .)


state 166

    (39) LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR . EXPRESSION
    (41) LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR . EXPRESSION LIST_IDS_EXPRESSIONS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID

    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    ID              shift and go to state 111
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 173
    LOCATION                       shift and go to state 109
    CALL                           shift and go to state 110
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75
    METHOD                         shift and go to state 69

state 167

    (40) LIST_IDS_EXPRESSIONS -> COMA ID LIST_IDS_EXPRESSIONS .

    FINALIZADOR     reduce using rule 40 (LIST_IDS_EXPRESSIONS -> COMA ID LIST_IDS_EXPRESSIONS .)


state 168

    (46) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT . ELSE STATEMENT
    (47) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .

    RETURN          reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    IF              reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    WHILE           reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BREAK           reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    CONTINUE        reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    INT             reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BOOLEAN         reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    STRING          reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    ID              reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    LLAVEIZQ        reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    THIS            reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NEW             reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NEGLOGICA       reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    MINUS           reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    PARENTIZQ       reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NUMERO          reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BIN             reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NUMEROC         reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    CADENA          reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    TRUE            reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    FALSE           reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NULL            reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    LLAVEDER        reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    ELSE            reduce using rule 47 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT .)

  ! ELSE            [ shift and go to state 174 ]


state 169

    (48) STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .

    RETURN          reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    IF              reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    WHILE           reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BREAK           reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    CONTINUE        reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    INT             reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BOOLEAN         reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    STRING          reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    ID              reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    LLAVEIZQ        reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    THIS            reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NEW             reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NEGLOGICA       reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    MINUS           reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    PARENTIZQ       reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NUMERO          reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    BIN             reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NUMEROC         reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    CADENA          reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    TRUE            reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    FALSE           reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    NULL            reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    LLAVEDER        reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)
    ELSE            reduce using rule 48 (STATEMENT -> WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT .)


state 170

    (61) ACTUALS -> EXPRESSION COMA ACTUALS .

    PARENTDER       reduce using rule 61 (ACTUALS -> EXPRESSION COMA ACTUALS .)


state 171

    (66) EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .

    ACCESO          reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    PLUS            reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MINUS           reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    POR             reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    DIVIDE          reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MODULO          reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    YAND            reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    OOR             reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MENORQUE        reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MENORIGUAL      reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MAYORQUE        reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    MAYORIGUAL      reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    COMPIGUAL       reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    COMPDIFERENTE   reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    FINALIZADOR     reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    PARENTDER       reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    CORCHDER        reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)
    COMA            reduce using rule 66 (EXPRESSION -> NEW TYPE CORCHIZQ EXPRESSION CORCHDER .)


state 172

    (36) VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .

    RETURN          reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    IF              reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    WHILE           reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BREAK           reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    CONTINUE        reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    INT             reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BOOLEAN         reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    STRING          reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    ID              reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    LLAVEIZQ        reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    THIS            reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NEW             reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NEGLOGICA       reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    MINUS           reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    PARENTIZQ       reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NUMERO          reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    BIN             reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NUMEROC         reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    CADENA          reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    TRUE            reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    FALSE           reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    NULL            reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)
    LLAVEDER        reduce using rule 36 (VAR_DECL -> TYPE ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS FINALIZADOR .)


state 173

    (39) LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION .
    (41) LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION . LIST_IDS_EXPRESSIONS
    (67) EXPRESSION -> EXPRESSION . ACCESO LENGTH
    (54) LOCATION -> EXPRESSION . ACCESO ID
    (73) BINARY_EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . POR EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . YAND EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . OOR EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . COMPDIFERENTE EXPRESSION
    (59) METHOD -> EXPRESSION . ACCESO ID
    (38) LIST_IDS_EXPRESSIONS -> . COMA ID
    (39) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . COMA ID LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS

    FINALIZADOR     reduce using rule 39 (LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION .)
    ACCESO          shift and go to state 144
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    POR             shift and go to state 94
    DIVIDE          shift and go to state 95
    MODULO          shift and go to state 96
    YAND            shift and go to state 97
    OOR             shift and go to state 98
    MENORQUE        shift and go to state 99
    MENORIGUAL      shift and go to state 100
    MAYORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    COMPIGUAL       shift and go to state 103
    COMPDIFERENTE   shift and go to state 104
    COMA            shift and go to state 126

    LIST_IDS_EXPRESSIONS           shift and go to state 175

state 174

    (46) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE . STATEMENT
    (42) STATEMENT -> . ASSIGN FINALIZADOR
    (43) STATEMENT -> . CALL FINALIZADOR
    (44) STATEMENT -> . RETURN EXPRESSION FINALIZADOR
    (45) STATEMENT -> . RETURN FINALIZADOR
    (46) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT
    (47) STATEMENT -> . IF PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (48) STATEMENT -> . WHILE PARENTIZQ EXPRESSION PARENTDER STATEMENT
    (49) STATEMENT -> . BREAK FINALIZADOR
    (50) STATEMENT -> . CONTINUE FINALIZADOR
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION ASIGNAR EXPRESSION
    (56) CALL -> . METHOD PARENTIZQ ACTUALS PARENTDER
    (57) CALL -> . METHOD PARENTIZQ PARENTDER
    (28) BLOCK -> . LLAVEIZQ LLAVEDER
    (29) BLOCK -> . LLAVEIZQ VAR_DECL_STATEMENTS_LIST LLAVEDER
    (53) LOCATION -> . ID
    (54) LOCATION -> . EXPRESSION ACCESO ID
    (55) LOCATION -> . ID CORCHIZQ EXPRESSION CORCHDER
    (58) METHOD -> . ID
    (59) METHOD -> . EXPRESSION ACCESO ID
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . THIS
    (65) EXPRESSION -> . NEW ID PARENTIZQ PARENTDER
    (66) EXPRESSION -> . NEW TYPE CORCHIZQ EXPRESSION CORCHDER
    (67) EXPRESSION -> . EXPRESSION ACCESO LENGTH
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . NEGLOGICA EXPRESSION
    (70) EXPRESSION -> . MINUS EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . PARENTIZQ EXPRESSION PARENTDER
    (73) BINARY_EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION POR EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION MODULO EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION YAND EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION OOR EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION MENORQUE EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION MENORIGUAL EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION MAYORQUE EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION MAYORIGUAL EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION COMPIGUAL EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION COMPDIFERENTE EXPRESSION
    (86) LITERAL -> . NUMERO
    (87) LITERAL -> . BIN
    (88) LITERAL -> . NUMEROC
    (89) LITERAL -> . CADENA
    (90) LITERAL -> . TRUE
    (91) LITERAL -> . FALSE
    (92) LITERAL -> . NULL

    RETURN          shift and go to state 61
    IF              shift and go to state 62
    WHILE           shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    LLAVEIZQ        shift and go to state 46
    ID              shift and go to state 111
    THIS            shift and go to state 70
    NEW             shift and go to state 71
    NEGLOGICA       shift and go to state 73
    MINUS           shift and go to state 74
    PARENTIZQ       shift and go to state 63
    NUMERO          shift and go to state 76
    BIN             shift and go to state 77
    NUMEROC         shift and go to state 78
    CADENA          shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NULL            shift and go to state 82

    EXPRESSION                     shift and go to state 58
    STATEMENT                      shift and go to state 176
    ASSIGN                         shift and go to state 59
    CALL                           shift and go to state 60
    BLOCK                          shift and go to state 67
    LOCATION                       shift and go to state 68
    METHOD                         shift and go to state 69
    BINARY_EXPRESSION              shift and go to state 72
    LITERAL                        shift and go to state 75

state 175

    (41) LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS .

    FINALIZADOR     reduce using rule 41 (LIST_IDS_EXPRESSIONS -> COMA ID ASIGNAR EXPRESSION LIST_IDS_EXPRESSIONS .)


state 176

    (46) STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .

    RETURN          reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    IF              reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    WHILE           reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    BREAK           reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    CONTINUE        reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    INT             reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    BOOLEAN         reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    STRING          reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    ID              reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    LLAVEIZQ        reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    THIS            reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    NEW             reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    NEGLOGICA       reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    MINUS           reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    PARENTIZQ       reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    NUMERO          reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    BIN             reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    NUMEROC         reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    CADENA          reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    TRUE            reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    FALSE           reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    NULL            reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    LLAVEDER        reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)
    ELSE            reduce using rule 46 (STATEMENT -> IF PARENTIZQ EXPRESSION PARENTDER STATEMENT ELSE STATEMENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CORCHIZQ in state 57 resolved as shift
